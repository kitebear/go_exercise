package main

/**
方法主要源于 OOP 语言，在传统面向对象语言中 (例如 C++), 我们会用一个“类”来封装属于自己的数据和函数，这些类的函数就叫做方法。
虽然 Go 不是经典意义上的面向对象语言，但是我们可以在一些接收者（自定义类型，结构体）上定义函数，同理这些接收者的函数在 Go 里面也叫做方法。

声明
方法（method）的声明和函数很相似, 只不过它必须指定接收者：
func (t T) F() {}

接收者的类型只能为用关键字 type 定义的类型，例如自定义类型，结构体。
同一个接收者的方法名不能重复 (没有重载)，如果是结构体，方法名还不能和字段名重复。
值作为接收者无法修改其值，如果有更改需求，需要使用指针类型。
*/

type T struct{}

// 方法的接收者可以同时为值或者指针
func (t T) F() {}
func (*T) N()  {}

type G int64

func (g G) D() {}

func main() {
	t := T{}
	t.F()
	t.N()

	t1 := &T{}
	t1.N()

	// 接收者类型不是任意类型
	// 我们可以使用自定义类型来解决
	g := G(10)
	g.D()
}
